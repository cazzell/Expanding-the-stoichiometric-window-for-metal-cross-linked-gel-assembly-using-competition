%% Code authored by Seth Allen Cazzell
% cazzell.lbi@gmail.com

% This is the master driver that calls other functions to generate
% theoretical predictions for A2B3 hydrogels of simulated linear,
% telechelic A-B strengths. Predicts gel plateau moduli as a function of
% A and B concentration as a function of C competitor strength.

%% Please reference
% "Expanding the stoichiometric window for metal cross-linked gel assembly using competition" PNAS, Cazzell (2019)
% when appropriate.

%% Copyright 2019 Seth Allen Cazzell All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
% 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
% THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%% This code calls functions modified or taken from the work of Donald Scott Smith,
% which is covered by the BSD 2 Clause License. Those functions include his BSD 2 license.

% Functions called in this code are directly or modified from Donald Scott Smith
% see his work
% Smith, D. Scott, "Solution of Simultaneous Chemical Equilibria in Heterogeneous Systems: Implementation in Matlab" (2019).
% Chemistry Faculty Publications. 14. https://scholars.wlu.ca/chem_faculty/14

% see reference 25 in "Expanding the stoichiometric window for metal cross-linked gel assembly using competition" PNAS, Cazzell (2019)
% cazzell.lbi@gmail.com

%% This program is used to study the role of A2 B3 gelation with partitioned competitor's formation as a function of equilibrium constant and stoichiometry
% on the gel's plateau moduli 

% This is the master program. Here the variable to modify is the model_number, the equilibrium constant for the competitor,
% and the stoichiometry of the competitor

% This program is also used to generate a matrix indicating component and species stoichiometry,
% and a vector giving the stability constant of formation for that species or component

% This takes randomly generated constants in matrix "Constants" for
% beta_AB, and rasters log[beta_C] from 1-32 as the
% simulation iterates.

% Also runs an intial simulation where there is no competition.

clear
clc
close all

warning('off','all')


% Randomly generated constants K_AB for different models
% Constants are random number between 6 and 16 generated by 6+10.*rand(50,1)

Constants = [ 	14.1472
   15.0579
    7.2699
   15.1338
   12.3236
    6.9754
    8.7850
   11.4688
   15.5751
   15.6489
    7.5761
   15.7059
   15.5717
   10.8538
   14.0028
    7.4189
   10.2176
   15.1574
   13.9221
   15.5949
   12.5574
    6.3571
   14.4913
   15.3399
   12.7874
   13.5774
   13.4313
    9.9223
   12.5548
    7.7119
   13.0605
    6.3183
    8.7692
    6.4617
    6.9713
   14.2346
   12.9483
    9.1710
   15.5022
    6.3445
   10.3874
    9.8156
   13.6552
   13.9520
    7.8687
   10.8976
   10.4559
   12.4631
   13.0936
   13.5469];

% Competitor strength will be swept with K_C
%K_competitor_list = [0:32];
K_competitor_list = [0:32];

% Define the domain of Nc/Na and Nb/Na
B_ratios = linspace(1e-10,5,200);
C_ratios = linspace(1e-10,5,200);

for model_number = [1,5,29]
	
	% Load current models K_AB
	K_AB = Constants(model_number);
	
	% File management
	cd Models

	model_str = num2str(model_number);
	
	if model_number < 10
		cd_str_mod = [num2str(0), model_str];
	else
		cd_str_mod = [model_str];
	end
		
	cd(cd_str_mod)
	
	% Sweep competitor strength
	for K_BC = K_competitor_list
		
		% File management
		K_c_str = num2str(K_BC);
		if K_BC < 10
			cd_str_K_c = [num2str(0), K_c_str];
		else
			cd_str_K_c = [K_c_str];
		end
		cd(cd_str_K_c)
		
		% Run function to calculate the fraction of B groups that have reacted with A		
		[speciation] = calc_speciation(K_AB,K_BC,B_ratios,C_ratios);
		
		% Run function to calculate plateau moduli from speciation data
		[speciation] = calc_Gp_linear_Miller_Macosko(speciation,C_ratios);
		
		[spec_gp_surf,speciation] = plot_spec_gp_surf(speciation,K_AB,K_BC,B_ratios,C_ratios);
		
		% Code to save generated data
		save('structures.mat','speciation', 'spec_gp_surf')
		
		close all
		cd ..
	end
	cd ..
	cd ..
end